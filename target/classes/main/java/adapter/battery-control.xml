<control-adapter
        type="planning"
        uid="1A10000"
        offered="main.java.interfaces.BatteryCI">
    <consumption nominal="200"/>

       <upMode>
           <required>main.java.interfaces.BatteryCI</required>
           <body equipmentRef="battery">
               return battery.upMode();
           </body>
       </upMode>
       <downMode>
           <required>main.java.interfaces.BatteryCI</required>
           <body equipmentRef="battery">
               return battery.downMode();
           </body>
       </downMode>
       <currentMode>
           <required>main.java.interfaces.BatteryCI</required>
           <body equipmentRef="battery">
                return battery.currentMode();
           </body>
       </currentMode>

       <setMode>
           <required>main.java.interfaces.BatteryCI</required>
           <parameter name="newMode"/>
           <body equipmentRef="battery">
               return battery.setMode(newMode);
           </body>
       </setMode>

    <hasPlan>
        <required>main.java.interfaces.BatteryCI</required>
        <body equipmentRef="battery">
            return battery.hasPlan();
        </body>
    </hasPlan>
    <startTime>
        <required>main.java.interfaces.BatteryCI</required>
        <body equipmentRef="battery">
            return battery.startTime();
        </body>
    </startTime>
    <deadline>
        <required>main.java.interfaces.BatteryCI</required>
        <body equipmentRef="battery">
            return battery.deadline();
        </body>
    </deadline>
    <cancel>
        <required>main.java.interfaces.BatteryCI</required>
        <body equipmentRef="battery">
            return battery.cancel();
        </body>
    </cancel>
    <postpone>
        <required>main.java.interfaces.BatteryCI</required>
        <parameter name="d"/>
        <body equipmentRef="battery">
            return battery.postpone(d);
        </body>
    </postpone>
</control-adapter>
