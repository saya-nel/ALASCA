<!-- ----------------------------------------------------------------------- -->
<!-- Copyright Jacques Malenfant, UniversitÃ© Pierre et Marie Curie.          -->
<!-- Jacques.Malenfant@lip6.fr                                               -->
<!--                                                                         -->
<!-- This software is a computer program whose purpose is to provide an      -->
<!-- example for the course ALASCA, namely a home energy manager.            -->
<!--                                                                         -->
<!-- This software is governed by the CeCILL-C license under French law and  -->
<!-- abiding by the rules of distribution of free software.  You can use,    -->
<!-- modify and/ or redistribute the software under the terms of the         -->
<!-- CeCILL-C license as circulated by CEA, CNRS and INRIA at the following  -->
<!-- URL "http://www.cecill.info".                                           -->
<!--                                                                         -->
<!-- As a counterpart to the access to the source code and  rights to copy,  -->
<!-- modify and redistribute granted by the license, users are provided only -->
<!-- with a limited warranty  and the software's author,  the holder of the  -->
<!-- economic rights,  and the successive licensors  have only  limited      -->
<!-- liability.                                                              -->
<!--                                                                         -->
<!-- In this respect, the user's attention is drawn to the risks associated  -->
<!-- with loading,  using,  modifying and/or developing or reproducing the   -->
<!-- software by the user in light of its specific status of free software,  -->
<!-- that may mean  that it is complicated to manipulate,  and  that  also   -->
<!-- therefore means  that it is reserved for developers  and  experienced   -->
<!-- professionals having in-depth computer knowledge. Users are therefore   -->
<!-- encouraged to load and test the software's suitability as regards their -->
<!-- requirements in conditions enabling the security of their systems       -->
<!-- and/or data to be ensured and,  more generally, to use and operate it   -->
<!-- in the same conditions as regards security.                             -->
<!--                                                                         -->
<!-- The fact that you are presently reading this means that you have had    -->
<!-- knowledge of the CeCILL-C license and that you accept its terms.        -->
<!-- ----------------------------------------------------------------------  -->
<control-adapter
    xmlns="http://www.sorbonne-universite.fr/alasca/control-adapter"
    type="suspension"
    uid="1A10000"
    offered="fr.sorbonne_u.components.cyphy.hem.equipments.boiler.BoilerControlCI">
  <consumption nominal="2000"/>
  <on>
    <required>fr.sorbonne_u.components.cyphy.hem.equipments.boiler.BoilerControlCI</required>
    <body equipmentRef="boiler">
      return boiler.switchOn(fr.sorbonne_u.components.cyphy.hem.equipments.boiler.BoilerControlCI.STD);
    </body>
  </on>
  <off>
    <body equipmentRef="boiler">return boiler.switchOff();</body>
  </off>
  <mode-control numberOfModes="2">
    <upMode>
      <required>fr.sorbonne_u.components.cyphy.hem.equipments.boiler.BoilerControlCI</required>
      <body equipmentRef="boiler">
        int m = boiler.mode();
        if (m == fr.sorbonne_u.components.cyphy.hem.equipments.boiler.BoilerControlCI.ECO) {
        boiler.std();
          return true;
        } else {
          return false;
        }
      </body>
    </upMode>
    <downMode>
      <required>fr.sorbonne_u.components.cyphy.hem.equipments.boiler.BoilerControlCI</required>
      <body equipmentRef="boiler">
        int m = boiler.mode();
        if (m == fr.sorbonne_u.components.cyphy.hem.equipments.boiler.BoilerControlCI.STD) {
          boiler.eco();
          return true;
        } else {
          return false;
        }
      </body>
    </downMode>
    <setMode>
      <required>fr.sorbonne_u.components.cyphy.hem.equipments.boiler.BoilerControlCI</required>
      <parameter name="newMode"/>
      <body equipmentRef="boiler">
        boolean ret = false;
        int m = boiler.mode();
        if (newMode == 1 &amp;&amp; m == fr.sorbonne_u.components.cyphy.hem.equipments.boiler.BoilerControlCI.STD) {
          boiler.eco();
          ret = true;
        } else if (newMode == 2 &amp;&amp; m == fr.sorbonne_u.components.cyphy.hem.equipments.boiler.BoilerControlCI.ECO) {
          boiler.std();
          ret = true;
        }
        return ret;  
      </body>
    </setMode>
    <currentMode>
      <required>fr.sorbonne_u.components.cyphy.hem.equipments.boiler.BoilerControlCI</required>
      <body equipmentRef="boiler">
        int m = boiler.mode();
        if (m == fr.sorbonne_u.components.cyphy.hem.equipments.boiler.BoilerControlCI.ECO) {
          return 1;
        } else {
          return 2;
        }
      </body>
    </currentMode>
  </mode-control>
  <suspended>
    <body equipmentRef="boiler">return boiler.active();</body>
  </suspended>
  <suspend>
    <body equipmentRef="boiler">return boiler.passivate();</body>
  </suspend>
  <resume>
    <body equipmentRef="boiler">return boiler.activate();</body>
  </resume>
  <emergency>
    <body equipmentRef="boiler">return boiler.degreeOfEmergency();</body>
  </emergency>
</control-adapter>
